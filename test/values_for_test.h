#ifndef VALUES_FOR_TEST_H
#define VALUES_FOR_TEST_H

#include "data_loader.h"

namespace test_data {

using namespace test_utils;

// usefull constants
#define INT32_MAX_00 "2147483647"
#define INT32_MAX_M2 "2147483645"
#define INT32_MAX_M1 "2147483646"
#define INT32_MAX_P1 "2147483648"
#define INT32_MAX_P2 "2147483649"
#define INT64_MAX_00 "9223372036854775807"
#define INT64_MAX_M2 "9223372036854775805"
#define INT64_MAX_M1 "9223372036854775806"
#define INT64_MAX_P1 "9223372036854775808"
#define INT64_MAX_P2 "9223372036854775809"
#define UINT32_MAX_00 "4294967295"
#define UINT32_MAX_M2 "4294967293"
#define UINT32_MAX_M1 "4294967294"
#define UINT32_MAX_P1 "4294967296"
#define UINT32_MAX_P2 "4294967297"
#define UINT64_MAX_00 "18446744073709551615"
#define UINT64_MAX_M2 "18446744073709551613"
#define UINT64_MAX_M1 "18446744073709551614"
#define UINT64_MAX_P1 "18446744073709551616"
#define UINT64_MAX_P2 "18446744073709551617"

inline const std::string test_data_dir = "../../test/test_data/";

#define DECLARE_LOAD_TESTDATA_FUNC(OP_NAME, N) \
NODISCARD_AUTO \
get_all_##OP_NAME##_test_values() { return load_testdata<N>(test_data_dir + "values_for_"#OP_NAME"_test.csv"); }

DECLARE_LOAD_TESTDATA_FUNC(lshift, 2)
DECLARE_LOAD_TESTDATA_FUNC(rshift, 2)
DECLARE_LOAD_TESTDATA_FUNC(add, 2)
DECLARE_LOAD_TESTDATA_FUNC(sub, 2)
DECLARE_LOAD_TESTDATA_FUNC(mul, 2)
DECLARE_LOAD_TESTDATA_FUNC(div, 2)
DECLARE_LOAD_TESTDATA_FUNC(mod, 2)
DECLARE_LOAD_TESTDATA_FUNC(divmod, 2)
DECLARE_LOAD_TESTDATA_FUNC(sqrt, 1)
DECLARE_LOAD_TESTDATA_FUNC(log2, 1)
DECLARE_LOAD_TESTDATA_FUNC(log10, 1)
DECLARE_LOAD_TESTDATA_FUNC(log, 2)
DECLARE_LOAD_TESTDATA_FUNC(pow, 2)
DECLARE_LOAD_TESTDATA_FUNC(powmod, 3)
DECLARE_LOAD_TESTDATA_FUNC(perm, 2)
DECLARE_LOAD_TESTDATA_FUNC(comb, 2)
DECLARE_LOAD_TESTDATA_FUNC(gcd, 2)
DECLARE_LOAD_TESTDATA_FUNC(lcm, 2)
DECLARE_LOAD_TESTDATA_FUNC(digit_sum_10, 1)
DECLARE_LOAD_TESTDATA_FUNC(digit_sum_16, 1)
DECLARE_LOAD_TESTDATA_FUNC(to_string_10, 1)
DECLARE_LOAD_TESTDATA_FUNC(to_string_16, 1)

}

#endif // VALUES_FOR_TEST_H
